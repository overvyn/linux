Step 1: Download the Arch Linux ISO
***********************************
HTTP
http://mirrors.evowise.com/archlinux/iso/2020.08.01/
Torrent
magnet:?xt=urn:btih:49da7ae0de8874462471d0f5419b850e599b05ef&dn=archlinux-2020.08.01-x86_64.iso

Step 2: Create a live USB of Arch Linux
***************************************
Use balenaEtcher GUI

or use command line

# sdx , is the usb device detected
dd bs=4M if=/path/to/archlinux.iso of=/dev/sdx status=progress && sync

Partition the disks
*******************
sda 15G Example

cfdisk /dev/sda

sda1 swap  4G
sda2 /     15G ext4

mkswap /dev/sda1
mkfs.ext4 /dev/sda2

swapon /dev/sda1
mount /dev/sda2 /mnt 


Step 3: Install Base System
***************************
pacman -Syy
pacman -S reflector
reflector --verbose --country brazil --latest 15 --sort rate --save /etc/pacman.d/mirrorlist
pacstrap /mnt base base-devel linux linux-firmware nano vi vim neovim xterm alacritty networkmanager


Configure the installed Arch system
***********************************
genfstab -U /mnt >> /mnt/etc/fstab
arch-chroot /mnt

Setting Locale and timezone
***************************
ls /usr/share/kbd/keymaps/**/*.map.gz
loadkeys la-latin1
timedatectl set-ntp true
timedatectl set-timezone America/Argentina/Buenos_Aires
ln -sf /usr/share/zoneinfo/America/Argentina/Buenos_Aires /etc/localtime
hwclock --systohc

#Edit locale-gen en_US.UTF-8
#Run locale-gen
#Add en_US.UTF-8 to /etc/locale.conf
export LANG=en_US.UTF-8

#Edit /etc/vconsole.conf
KEYMAP=la-latin1
...
Por conveniencia, localectl puede utilizarse para configurar el mapa de teclas de la consola. 
Cambiará la variable KEYMAP en /etc/vconsole.conf y también establecerá el mapa de teclas para la sesión actual:
### $ localectl set-keymap --no-convert mapa_de_teclado ###

$ localectl set-keymap --no-convert la-latin1

Network Configuration
*********************
echo HOSTNAME > /etc/hostname

#touch /etc/hosts
127.0.0.1	localhost
::1		localhost


Password Root
*************
#Change root passwd
passwd root

Add new User
************
uuseradd -m -s /bin/bash lpb
usermod -aG wheel lpb


Step 4: Install Grub bootloader
******************************
#BootManager
sudo pacman -S grub

grub-install /dev/sda
grub-mkconfig -o /boot/grub/grub.cfg

Step 5: Install a desktop environment (Awesome in this case)
**********************************************************
pacman -S xorg xorg-xinit
pacman -S awesome lightdm lightdm-gtk-greeter lightdm-gtk-greeter-settings

systemctl enable NetworkManager
systemctl enable lightdm

### Configure Awesome ###

mkdir -p ~/.config/awesome
cp /etc/xdg/awesome/rc.lua ~/.config/awesome/
cp /usr/share/awesome/themes/gtk/theme.lua ~/.config/awesome/

## With xdg_menu ###
https://wiki.archlinux.org/index.php/Xdg-menu#Installation
$ xdg_menu --format awesome --root-menu /etc/xdg/menus/arch-applications.menu >~/.config/awesome/archmenu.lua

Then edit your rc.lua as shown below

Add a require statment for your new menu.lua file
Add an entry to your awful.menu object for your new menu which calls xdgmenu
...
xdg_menu = require("archmenu")
...

...
mymainmenu = awful.menu({ items = { { "awesome", myawesomemenu, beautiful.awesome_icon },
                                    { "Applications", xdgmenu },
                                    { "open terminal", terminal }
                                  }
                        })
...


## autostart compton or any other app awesome ###

#rc.lua botton
do
  local cmds =
  {
    "compton -b",
    "firefox"
  }

  for _,i in pairs(cmds) do
    awful.util.spawn(i)
  end
end

Last Step: 
*********
#exit
#Reboot

Done.